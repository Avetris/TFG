CREATE TABLE IF NOT EXISTS USUARIO
(
	U_ID_USUARIO INTEGER NOT NULL, /*Identificador Usuario*/
	U_NOMBRE VARCHAR2 NOT NULL, /*Nombre Usuario*/
	U_ULT_SINCRO DATETIME NOT NULL, /*Ultima sincronizacion con la bbdd remota*/
	U_IDIOMA_JUEGO VARCHAR2 NOT NULL,/*Idioma del contenido del juego*/

	PRIMARY KEY(U_ID_USUARIO)
);

CREATE TABLE IF NOT EXISTS CONTENIDO
(
	C_ID_CONTENIDO INTEGER NOT NULL, /*Identificador Contenido*/
	C_CASTELLANO VARCHAR(200), /*Texto en castellano*/
	C_EUSKERA VARCHAR(200), /*Texto en euskera*/
	C_IMAGEN BLOB, /*Imagen Contenido*/

	PRIMARY KEY(C_ID_CONTENIDO)
);

CREATE TABLE IF NOT EXISTS MINIJUEGO
(
	M_ID_MINIJUEGO INTEGER NOT NULL, /*Identificador Minijuego*/
	M_NOMBRE VARCHAR2 NOT NULL, /*Nombre Minijuego*/
	M_DESCRIPCION VARCHAR2 NOT NULL, /*Descripcion Minijuego (Instrucciones)*/
	M_MAXIMO INTEGER NOT NULL DEFAULT 4, /*Cantidad maxima de grupos en un juego*/ 
	M_MINIMO INTEGER NOT NULL DEFAULT 4, /*Cantidad minima de grupos en un juego*/
	M_PUNTUACION_MAXIMA INTEGER NOT NULL, /*Puntuacion de partida (multiple de 3)*/

	PRIMARY KEY(M_ID_MINIJUEGO)
);

CREATE TABLE IF NOT EXISTS GRUPO
(
	G_ID_GRUPO INTEGER NOT NULL, /*Identificador Gruppo*/
	G_CONTENIDO_SOLUCION INTEGER NOT NULL, /*Identificador Contenido Padre*/
	G_CONTENIDO_OPCION INTEGER NOT NULL, /*Identificador Contenido Hijo*/

	PRIMARY KEY (G_ID_GRUPO, G_CONTENIDO_SOLUCION, G_CONTENIDO_OPCION)
	
);

CREATE TABLE IF NOT EXISTS GRUPO_MINIJUEGOS
(
	GM_ID_MINIJUEGO INTEGER NOT NULL, /*Identificador Minijuego*/
	GM_ID_GRUPO INTEGER NOT NULL, /*Identificador Grupo*/

	PRIMARY KEY(GM_ID_GRUPO, GM_ID_MINIJUEGO)
);

CREATE TABLE IF NOT EXISTS PREMIO
(
	PR_ID_PREMIO INTEGER NOT NULL, /*Identificador Premio*/
	PR_NOMBRE VARCHAR2 NOT NULL,  /*Nombre Premio*/
	PR_IMAGEN BLOB NOT NULL, /*Imagen Premio*/
	PR_CONSEGUIDO VARCHAR2 NOT NULL, /*Conseguido el premio Si o No*/
	PR_FECMOD DATETIME NOT NULL,

	PRIMARY KEY(PR_ID_PREMIO)
);

CREATE TABLE IF NOT EXISTS FONDO
(
	F_ID_FONDO INT(3) NOT NULL, /*Identificador Fondo*/
	F_IMAGEN BLOB NOT NULL, /*Imagen Fondo*/

	PRIMARY KEY(F_ID_FONDO)
);

CREATE TABLE IF NOT EXISTS MAPA
(
	MA_ID_MAPA INTEGER NOT NULL, /*Identificador Mapa*/
	MA_IMAGEN BLOB NOT NULL, /*Imagen Mapa*/

	PRIMARY KEY(MA_ID_MAPA)
);

CREATE TABLE IF NOT EXISTS BOTONES_MAPA
(
	BM_ID_MAPA INTEGER NOT NULL, /*Identificador Mapa*/
	BM_ID_BOTON INTEGER NOT NULL, /*Identificador Boton respecto al mapa*/
	BM_POSICION_X FLOAT NOT NULL, /*Posicion X del Boton*/
	BM_POSICION_Y FLOAT NOT NULL, /*Posicion Y del Boton*/
	BM_WIDTH FLOAT NOT NULL, /*Anchura del Boton*/
	BM_HEIGHT FLOAT NOT NULL, /*Altura del Boton*/

	PRIMARY KEY(BM_ID_MAPA, BM_ID_BOTON)
);

CREATE TABLE IF NOT EXISTS HISTORIAL_MAPAS
(
	HM_ID_MAPA INTEGER NOT NULL, /*Identificador Mapa*/ 
	HM_POS_MAPA INTEGER NOT NULL, /*Posicion del Mapa en el Juego*/
	HM_ID_MINIJUEGO INTEGER NOT NULL, /*Identificador Minijuego*/ 
	HM_ID_BOTON INTEGER NOT NULL, /*Identificador boton en el mapa*/
	HM_ESTADO VARCHAR2 NOT NULL, /*Actual: Posicion Jugador. Futuro: Nivel futuro. Pasado: Nivel superado*/
	HM_FECHA DATETIME NOT NULL, /*Fecha creacion/Modificacion*/

	PRIMARY KEY(HM_ID_MAPA, HM_POS_MAPA, HM_ID_BOTON)
);


CREATE TABLE IF NOT EXISTS HISTORIAL_JUEGO
(
	HJ_ID_MINIJUEGO INTEGER NOT NULL, /*Identificador Minijuego*/ 
	HJ_COMPLETO VARCHAR NOT NULL DEFAULT 'N', /*'S: Se ha completado el nivel, N: No se ha completado el nivel*/
	HJ_VIDAS INTEGER NOT NULL, /*Vidas que le han quedado*/
	HJ_ERRORES INTEGER NOT NULL, /*Errores cometidos*/
	HJ_TIEMPO INTEGER NOT NULL, /*Tiempo en pasarse el Minijuego*/
	HJ_FECHA DATETIME NOT NULL, /*Fecha en jugar*/

	PRIMARY KEY(HJ_ID_MINIJUEGO, HJ_FECHA)
);

CREATE TABLE IF NOT EXISTS TIEMPOS_IMAGENES
(
	TI_NOMBRE_TABLA VARCHAR NOT NULL, /*Nombre de la tabla con imagenes a guardar el tiempo*/
	TI_FECMOD DATETIME NOT NULL, /*Fecha de ultima modificacion en la tabla*/

	PRIMARY KEY(TI_NOMBRE_TABLA)
);

CREATE VIEW V_MAPAS AS
	SELECT HM_ID_MAPA, HM_POS_MAPA, HM_ID_BOTON, HM_ID_MINIJUEGO, HM_ESTADO
	FROM HISTORIAL_MAPAS
	WHERE HM_ESTADO IN ('Actual', 'Futuro') ;

CREATE VIEW V_MINIJUEGOS AS
	SELECT M_ID_MINIJUEGO, M_NOMBRE, M_DESCRIPCION, M_PUNTUACION_MAXIMA
	FROM MINIJUEGO
	WHERE (SELECT COUNT(*)
	  	   FROM GRUPO_MINIJUEGOS
	  	   WHERE GM_ID_MINIJUEGO = M_ID_MINIJUEGO) >= M_MINIMO
		  OR M_ID_MINIJUEGO IN(1, 3);

CREATE VIEW V_CONTENIDO AS
	SELECT G_ID_GRUPO, GM_ID_MINIJUEGO,
			CS.C_ID_CONTENIDO AS ID_CONTENIDO_SOLUCION, CS.C_IMAGEN AS IMAGEN_SOLUCION, 
			(CASE WHEN (SELECT U_IDIOMA_JUEGO FROM USUARIO) ='euskera' THEN CS.C_EUSKERA
				ELSE CS.C_CASTELLANO
			END) AS  TEXTO_SOLUCION,
			CO.C_ID_CONTENIDO AS ID_CONTENIDO_OPCION, CO.C_IMAGEN AS IMAGEN_OPCION, 
			(CASE WHEN (SELECT U_IDIOMA_JUEGO FROM USUARIO) ='euskera' THEN CO.C_EUSKERA
				ELSE CO.C_CASTELLANO
			END) AS  TEXTO_OPCION
	FROM GRUPO, GRUPO_MINIJUEGOS, CONTENIDO CS, CONTENIDO CO
	WHERE G_ID_GRUPO = GM_ID_GRUPO
	  AND CS.C_ID_CONTENIDO = G_CONTENIDO_SOLUCION 
	  AND CO.C_ID_CONTENIDO = G_CONTENIDO_OPCION;

CREATE VIEW V_HISTORIAL_MAPAS AS
	SELECT HM_ID_MAPA, HM_POS_MAPA, HM_ID_MINIJUEGO, HM_ID_BOTON, HM_ESTADO, HM_FECHA
	FROM HISTORIAL_MAPAS
	WHERE HM_FECHA >= (SELECT U_ULT_SINCRO
					  FROM USUARIO);

CREATE VIEW V_HISTORIAL_JUEGO AS
	SELECT HJ_ID_MINIJUEGO, HJ_COMPLETO, HJ_VIDAS, HJ_ERRORES, HJ_TIEMPO, HJ_FECHA
	FROM HISTORIAL_JUEGO
	WHERE HJ_FECHA >= (SELECT U_ULT_SINCRO
					  FROM USUARIO);

CREATE VIEW V_BOTONES AS
	SELECT BM_ID_BOTON, BM_POSICION_Y, BM_POSICION_X, BM_WIDTH, BM_HEIGHT, HM_ESTADO, HM_POS_MAPA, HM_ID_MINIJUEGO
	FROM BOTONES_MAPA, HISTORIAL_MAPAS
	WHERE BM_ID_BOTON = HM_ID_BOTON
	  AND BM_ID_MAPA = HM_ID_MAPA;

CREATE VIEW V_PREMIOS AS
	SELECT PR_ID_PREMIO
	FROM PREMIO
	WHERE PR_FECMOD >= (SELECT U_ULT_SINCRO
					  FROM USUARIO);	 