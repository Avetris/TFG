DELIMITER $$
----------------------------------------------CONTENIDO_IDIOMAS-------------
CREATE TRIGGER T_CONTENIDO_B
BEFORE DELETE ON CONTENIDO
FOR EACH ROW
BEGIN
	DELETE FROM CONTENIDO_TEXTO
	WHERE ID_TEXTO = OLD.ID_TEXTO;

	DELETE FROM CONTENIDO_MINIJUEGOS
	WHERE ID_CONTENIDO = OLD.ID_CONTENIDO;
END $$

CREATE TRIGGER T_IDIOMA_USUARIO_B
BEFORE DELETE ON IDIOMA_USUARIO
FOR EACH ROW
BEGIN
	UPDATE TS_CONTENIDO TS
	SET ACCION = 'M',
		FECMOD = SYSDATE()
	WHERE ID_USUARIO = OLD.ID_USUARIO
		AND EXISTS (SELECT 1 
					FROM CONTENIDO C, CONTENIDO_TEXTO CT
					WHERE C.ID_CONTENIDO = TS.ID_CONTENIDO
					  AND C.ID_TEXTO = CT.ID_TEXTO
					  AND CT.ID_IDIOMA = OLD.ID_IDIOMA);
END $$
-----------------------------------------------CONTENIDO---------------------------
CREATE TRIGGER T_CONTENIDO_M
BEFORE UPDATE ON CONTENIDO
FOR EACH ROW
BEGIN
	UPDATE TS_CONTENIDO 
	SET ACCION = 'M',
		FECMOD = SYSDATE()
	WHERE ID_CONTENIDO = OLD.ID_CONTENIDO;
END $$

CREATE TRIGGER T_CONTENIDO_B
BEFORE DELETE ON CONTENIDO
FOR EACH ROW
BEGIN
	UPDATE TS_CONTENIDO 
	SET ACCION = 'B',
		FECMOD = SYSDATE()
	WHERE ID_CONTENIDO = OLD.ID_CONTENIDO;
	
	DELETE FROM CONTENIDO_TEXTO
	WHERE ID_TEXTO = OLD.ID_TEXTO;
END $$

CREATE TRIGGER T_PERMISOS_CONTENIDO_A
BEFORE INSERT ON PERMISOS_CONTENIDO
FOR EACH ROW
BEGIN
	DECLARE p_existe INT DEFAULT 0;
	SELECT COUNT(*)
		INTO p_existe
	FROM TS_CONTENIDO 
	WHERE ID_CONTENIDO = NEW.ID_CONTENIDO
	  AND ID_USUARIO = NEW.ID_USUARIO;
	IF(p_existe > 0) THEN
		UPDATE TS_CONTENIDO 
		SET ACCION = 'A',
			FECMOD = SYSDATE()
		WHERE ID_CONTENIDO = NEW.ID_CONTENIDO
		  AND ID_USUARIO = NEW.ID_USUARIO;	
	ELSE
		INSERT TS_CONTENIDO
		(
			ID_CONTENIDO, ID_USUARIO, ACCION, FECMOD
		)
		VALUES
		(
			NEW.ID_CONTENIDO, NEW.ID_USUARIO, 'A', SYSDATE()
		);	
	END IF;
END $$

CREATE TRIGGER T_PERMISOS_CONTENIDO_M
BEFORE UPDATE ON PERMISOS_CONTENIDO
FOR EACH ROW
BEGIN
	DECLARE p_existe INT DEFAULT 0;
	SELECT COUNT(*)
		INTO p_existe
	FROM TS_CONTENIDO 
	WHERE ID_CONTENIDO = OLD.ID_CONTENIDO
	  AND ID_USUARIO = OLD.ID_USUARIO;
	IF(p_existe > 0) THEN
		UPDATE TS_CONTENIDO 
		SET ACCION = 'M',
			FECMOD = SYSDATE()
		WHERE ID_CONTENIDO = OLD.ID_CONTENIDO
		  AND ID_USUARIO = OLD.ID_USUARIO;	
	ELSE
		INSERT TS_CONTENIDO
		(
			ID_CONTENIDO, ID_USUARIO, ACCION, FECMOD
		)
		VALUES
		(
			NEW.ID_CONTENIDO, NEW.ID_USUARIO, 'M', SYSDATE()
		);	
	END IF;
END $$

CREATE TRIGGER T_PERMISOS_CONTENIDO_B
BEFORE DELETE ON PERMISOS_CONTENIDO
FOR EACH ROW
BEGIN
	DECLARE p_existe INT DEFAULT 0;
	SELECT COUNT(*)
		INTO p_existe
	FROM TS_CONTENIDO 
	WHERE ID_CONTENIDO = OLD.ID_CONTENIDO
	  AND ID_USUARIO = OLD.ID_USUARIO;
	IF(p_existe > 0) THEN
		UPDATE TS_CONTENIDO 
		SET ACCION = 'B',
			FECMOD = SYSDATE()
		WHERE ID_CONTENIDO = OLD.ID_CONTENIDO
		  AND ID_USUARIO = OLD.ID_USUARIO;	
	END IF;
END $$

---------------------------------------------MINIJUEGO-------------------------

CREATE TRIGGER T_MINIJUEGO_M
BEFORE UPDATE ON MINIJUEGO
FOR EACH ROW
BEGIN
	DECLARE p_existe INT DEFAULT 0;
	SELECT COUNT(*)
		INTO p_existe
	FROM TS_MINIJUEGO 
	WHERE ID_CONTENIDO = OLD.ID_MINIJUEGO;
	IF(p_existe > 0) THEN
		UPDATE TS_MINIJUEGO 
		SET ACCION = 'M',
			FECMOD = SYSDATE()
		WHERE ID_MINIJUEGO = OLD.ID_MINIJUEGO;
	END IF;
END $$

CREATE TRIGGER T_MINIJUEGO_B
BEFORE DELETE ON MINIJUEGO
FOR EACH ROW
BEGIN
	DECLARE p_existe INT DEFAULT 0;
	SELECT COUNT(*)
		INTO p_existe
	FROM TS_MINIJUEGO 
	WHERE ID_MINIJUEGO = OLD.ID_MINIJUEGO;
	IF(p_existe > 0) THEN
		UPDATE TS_MINIJUEGO 
		SET ACCION = 'B',
			FECMOD = SYSDATE()
		WHERE ID_MINIJUEGO = OLD.ID_MINIJUEGO;	
	END IF;
END $$

CREATE TRIGGER T_PERMISOS_MINIJUEGOS_A
BEFORE INSERT ON PERMISOS_MINIJUEGOS
FOR EACH ROW
BEGIN
	DECLARE p_existe INT DEFAULT 0;
	SELECT COUNT(*)
		INTO p_existe
	FROM TS_MINIJUEGO 
	WHERE ID_MINIJUEGO = NEW.ID_MINIJUEGO
	  AND ID_USUARIO = NEW.ID_USUARIO;
	IF(p_existe > 0) THEN
		UPDATE TS_MINIJUEGO 
		SET ACCION = 'A',
			FECMOD = SYSDATE()
		WHERE ID_MINIJUEGO = NEW.ID_MINIJUEGO
		  AND ID_USUARIO = NEW.ID_USUARIO;	
	ELSE
		INSERT TS_MINIJUEGO
		(
			ID_MINIJUEGO, ID_USUARIO, ACCION, FECMOD
		)
		VALUES
		(
			NEW.ID_MINIJUEGO, NEW.ID_USUARIO, 'A', SYSDATE()
		);	
	END IF;
END $$

CREATE TRIGGER T_PERMISOS_MINIJUEGOS_M
BEFORE UPDATE ON PERMISOS_MINIJUEGOS
FOR EACH ROW
BEGIN
	DECLARE p_existe INT DEFAULT 0;
	SELECT COUNT(*)
		INTO p_existe
	FROM TS_MINIJUEGO 
	WHERE ID_CONTENIDO = OLD.ID_MINIJUEGO
	  AND ID_USUARIO = OLD.ID_USUARIO;
	IF(p_existe > 0) THEN
		UPDATE TS_MINIJUEGO 
		SET ACCION = 'M',
			FECMOD = SYSDATE()
		WHERE ID_MINIJUEGO = OLD.ID_MINIJUEGO
		  AND ID_USUARIO = OLD.ID_USUARIO;	
	ELSE
		INSERT TS_MINIJUEGO
		(
			ID_MINIJUEGO, ID_USUARIO, ACCION, FECMOD
		)
		VALUES
		(
			NEW.ID_MINIJUEGO, NEW.ID_USUARIO, 'M', SYSDATE()
		);	
	END IF;
END $$

CREATE TRIGGER T_PERMISOS_MINIJUEGOS_B
BEFORE DELETE ON PERMISOS_MINIJUEGOS
FOR EACH ROW
BEGIN
	DECLARE p_existe INT DEFAULT 0;
	SELECT COUNT(*)
		INTO p_existe
	FROM TS_MINIJUEGO 
	WHERE ID_MINIJUEGO = OLD.ID_MINIJUEGO
	  AND ID_USUARIO = OLD.ID_USUARIO;
	IF(p_existe > 0) THEN
		UPDATE TS_MINIJUEGO 
		SET ACCION = 'B',
			FECMOD = SYSDATE()
		WHERE ID_MINIJUEGO = OLD.ID_MINIJUEGO
		  AND ID_USUARIO = OLD.ID_USUARIO;	
	END IF;
END $$


----------------------------------------------------CONTENIDO_MINIJUEGO-------------------------------------
CREATE TRIGGER T_CONTENIDO_MINIJUEGOS_A
BEFORE INSERT ON CONTENIDO_MINIJUEGOS
FOR EACH ROW
BEGIN
	DECLARE p_existe INT DEFAULT 0;
	SELECT COUNT(*)
		INTO p_existe
	FROM TS_CONTENIDO_MINIJUEGOS 
	WHERE ID_MINIJUEGO = NEW.ID_MINIJUEGO
	  AND ID_CONTENIDO = NEW.ID_CONTENIDO;
	IF(p_existe > 0) THEN
		UPDATE TS_CONTENIDO_MINIJUEGOS 
		SET ACCION = 'A',
			FECMOD = SYSDATE()
		WHERE ID_MINIJUEGO = NEW.ID_MINIJUEGO
	      AND ID_CONTENIDO = NEW.ID_CONTENIDO;	
	ELSE
		INSERT TS_CONTENIDO_MINIJUEGOS
		(
			ID_MINIJUEGO, ID_CONTENIDO, ACCION, FECMOD
		)
		VALUES
		(
			NEW.ID_MINIJUEGO, NEW.ID_CONTENIDO, 'A', SYSDATE()
		);	
	END IF;
END $$

CREATE TRIGGER T_CONTENIDO_MINIJUEGOS_M
BEFORE UPDATE ON CONTENIDO_MINIJUEGOS
FOR EACH ROW
BEGIN
	DECLARE p_existe INT DEFAULT 0;
	SELECT COUNT(*)
		INTO p_existe
	FROM TS_CONTENIDO_MINIJUEGOS 
	WHERE ID_CONTENIDO = OLD.ID_MINIJUEGO
	  AND ID_CONTENIDO = OLD.ID_CONTENIDO;
	IF(p_existe > 0) THEN
		UPDATE TS_CONTENIDO_MINIJUEGOS 
		SET ACCION = 'M',
			FECMOD = SYSDATE()
		WHERE ID_MINIJUEGO = OLD.ID_MINIJUEGO
		  AND ID_CONTENIDO = OLD.ID_CONTENIDO;	
	ELSE
		INSERT TS_CONTENIDO_MINIJUEGOS
		(
			ID_MINIJUEGO, ID_USUARIO, ACCION, FECMOD
		)
		VALUES
		(
			NEW.ID_CONTENIDO, NEW.ID_CONTENIDO, 'M', SYSDATE()
		);	
	END IF;
END $$

CREATE TRIGGER T_CONTENIDO_MINIJUEGOS_B
BEFORE DELETE ON CONTENIDO_MINIJUEGOS
FOR EACH ROW
BEGIN
	DECLARE p_existe INT DEFAULT 0;
	SELECT COUNT(*)
		INTO p_existe
	FROM TS_CONTENIDO_MINIJUEGOS
	WHERE ID_MINIJUEGO = OLD.ID_MINIJUEGO
	  AND ID_CONTENIDO = OLD.ID_CONTENIDO;
	IF(p_existe > 0) THEN
		UPDATE TS_CONTENIDO_MINIJUEGOS
		SET ACCION = 'B',
			FECMOD = SYSDATE()
		WHERE ID_MINIJUEGO = OLD.ID_MINIJUEGO
		  AND ID_CONTENIDO = OLD.ID_CONTENIDO;	
	END IF;
END $$

DELIMITER ;