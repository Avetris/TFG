DELIMITER $$
-----------------------------------------------CONTENIDO---------------------------
CREATE TRIGGER T_CONTENIDO_A
AFTER INSERT ON CONTENIDO
FOR EACH ROW
BEGIN
	DECLARE p_existe INT DEFAULT 0;
	SELECT TSC_ID_CONTENIDO
			INTO p_existe
	FROM TS_CONTENIDO
	WHERE TSC_ID_CONTENIDO = NEW.C_ID_CONTENIDO;
	IF(p_existe > 0) THEN
		UPDATE TS_CONTENIDO 
		SET TSC_ACCION = 'A', 
			TSC_FECMOD = SYSDATE()
		WHERE TSC_ID_CONTENIDO = NEW.C_ID_CONTENIDO;
	ELSE
		INSERT INTO TS_CONTENIDO 
		(TSC_ID_CONTENIDO, TSC_ACCION, TSC_FECMOD)
		VALUES
		(NEW.C_ID_CONTENIDO, 'A', SYSDATE());
		UPDATE TS_CONTENIDO 
		SET TSC_ACCION = 'A', 
			TSC_FECMOD = SYSDATE()
		WHERE TSC_ID_CONTENIDO = NEW.C_ID_CONTENIDO;
	END IF;
END $$

CREATE TRIGGER T_CONTENIDO_M
BEFORE UPDATE ON CONTENIDO
FOR EACH ROW
BEGIN
	UPDATE TS_CONTENIDO 
	SET TSC_ACCION = 'M',
		TSC_FECMOD = SYSDATE()
	WHERE TSC_ID_CONTENIDO = OLD.C_ID_CONTENIDO;
END $$

CREATE TRIGGER T_CONTENIDO_B
BEFORE DELETE ON CONTENIDO
FOR EACH ROW
BEGIN
	UPDATE TS_CONTENIDO 
	SET TSC_ACCION = 'B',
		TSC_FECMOD = SYSDATE()
	WHERE TSC_ID_CONTENIDO = OLD.C_ID_CONTENIDO;
END $$
---------------------------------------------MINIJUEGO-------------------------

CREATE TRIGGER T_MINIJUEGO_M
BEFORE UPDATE ON MINIJUEGO
FOR EACH ROW
BEGIN
	DECLARE p_existe INT DEFAULT 0;
	SELECT COUNT(1)
		INTO p_existe
	FROM TS_MINIJUEGO 
	WHERE TSM_ID_MINIJUEGO = OLD.M_ID_MINIJUEGO;

	IF(p_existe > 0) THEN
		UPDATE TS_MINIJUEGO 
		SET TSM_ACCION = 'M',
			TSM_FECMOD = SYSDATE()
		WHERE TSM_ID_MINIJUEGO = OLD.M_ID_MINIJUEGO;
	END IF;
END $$

CREATE TRIGGER T_MINIJUEGO_B
BEFORE DELETE ON MINIJUEGO
FOR EACH ROW
BEGIN
	DECLARE p_existe INT DEFAULT 0;
	SELECT COUNT(1)
		INTO p_existe
	FROM TS_MINIJUEGO 
	WHERE TSM_ID_MINIJUEGO = OLD.M_ID_MINIJUEGO;

	IF(p_existe > 0) THEN
		UPDATE TS_MINIJUEGO 
		SET TSM_ACCION = 'B',
			TSM_FECMOD = SYSDATE()
		WHERE TSM_ID_MINIJUEGO = OLD.M_ID_MINIJUEGO;
	END IF;
END $$

CREATE TRIGGER T_PERMISOS_MINIJUEGOS_A
AFTER INSERT ON PERMISOS_MINIJUEGOS
FOR EACH ROW
BEGIN
	DECLARE p_existe INT DEFAULT 0;
	SELECT COUNT(1)
		INTO p_existe
	FROM TS_MINIJUEGO 
	WHERE TSM_ID_MINIJUEGO = NEW.PM_ID_MINIJUEGO
	  AND TSM_ID_NINO = NEW.PM_ID_NINO;

	IF(p_existe > 0) THEN
		UPDATE TS_MINIJUEGO 
		SET TSM_ACCION = 'A',
			TSM_FECMOD = SYSDATE()
		WHERE TSM_ID_MINIJUEGO = NEW.PM_ID_MINIJUEGO
		  AND TSM_ID_NINO = NEW.PM_ID_NINO;	
	ELSE
		INSERT TS_MINIJUEGO
		(
			TSM_ID_MINIJUEGO, TSM_ID_NINO, TSM_ACCION, TSM_FECMOD
		)
		VALUES
		(
			NEW.PM_ID_MINIJUEGO, NEW.PM_ID_NINO, 'A', SYSDATE()
		);	
	END IF;
END $$

CREATE TRIGGER T_PERMISOS_MINIJUEGOS_M
BEFORE UPDATE ON PERMISOS_MINIJUEGOS
FOR EACH ROW
BEGIN
	DECLARE p_existe INT DEFAULT 0;
	SELECT COUNT(1)
		INTO p_existe
	FROM TS_MINIJUEGO 
	WHERE TSM_ID_MINIJUEGO = OLD.PM_ID_MINIJUEGO
	  AND TSM_ID_NINO = OLD.PM_ID_NINO;

	IF(p_existe > 0) THEN
		UPDATE TS_MINIJUEGO 
		SET TSM_ACCION = 'M',
			TSM_FECMOD = SYSDATE()
		WHERE TSM_ID_MINIJUEGO = OLD.PM_ID_MINIJUEGO
		  AND TSM_ID_NINO = OLD.PM_ID_NINO;	
	ELSE
		INSERT TS_MINIJUEGO
		(
			TSM_ID_MINIJUEGO, TSM_ID_NINO, TSM_ACCION, TSM_FECMOD
		)
		VALUES
		(
			NEW.PM_ID_MINIJUEGO, NEW.PM_ID_NINO, 'M', SYSDATE()
		);	
	END IF;
END $$

CREATE TRIGGER T_PERMISOS_MINIJUEGOS_B
BEFORE DELETE ON PERMISOS_MINIJUEGOS
FOR EACH ROW
BEGIN
	DECLARE p_existe INT DEFAULT 0;
	SELECT COUNT(1)
		INTO p_existe
	FROM TS_MINIJUEGO 
	WHERE TSM_ID_MINIJUEGO = OLD.PM_ID_MINIJUEGO
	  AND TSM_ID_NINO = OLD.PM_ID_NINO;

	IF(p_existe > 0) THEN
		UPDATE TS_MINIJUEGO 
		SET TSM_ACCION = 'B',
			TSM_FECMOD = SYSDATE()
		WHERE TSM_ID_MINIJUEGO = OLD.PM_ID_MINIJUEGO
		  AND TSM_ID_NINO = OLD.PM_ID_NINO;	
	END IF;
END $$

----------------------------------------------------GRUPO-------------------------------------
CREATE TRIGGER T_PERMISOS_GRUPOS_A
AFTER INSERT ON PERMISOS_GRUPOS
FOR EACH ROW
BEGIN
	DECLARE p_existe INT DEFAULT 0;
	SELECT COUNT(1)
		INTO p_existe
	FROM TS_GRUPO 
	WHERE TSG_ID_NINO = NEW.PG_ID_NINO
	  AND TSG_ID_GRUPO = NEW.PG_ID_GRUPO;

	IF(p_existe > 0) THEN
		UPDATE TS_GRUPO 
		SET TSG_ACCION = 'A',
			TSG_FECMOD = SYSDATE()
		WHERE TSG_ID_NINO = NEW.PG_ID_NINO
	  	  AND TSG_ID_GRUPO = NEW.PG_ID_GRUPO;
	  	    
	ELSE
		INSERT TS_GRUPO
		(
			TSG_ID_NINO, TSG_ID_GRUPO, TSG_CONTENIDO_SOLUCION, TSG_CONTENIDO_OPCION, TSG_ACCION, TSG_FECMOD
		)
		(
			SELECT NEW.PG_ID_NINO, NEW.PG_ID_GRUPO, G_CONTENIDO_SOLUCION, G_CONTENIDO_OPCION, 'A', SYSDATE()
			FROM GRUPO
			WHERE G_ID_GRUPO = NEW.PG_ID_GRUPO
		);	
	END IF;
END $$

CREATE TRIGGER T_PERMISOS_GRUPOS_M
BEFORE UPDATE ON PERMISOS_GRUPOS
FOR EACH ROW
BEGIN
	DECLARE p_existe INT DEFAULT 0;
	SELECT COUNT(1)
		INTO p_existe
	FROM TS_GRUPO 
	WHERE TSG_ID_NINO = OLD.PG_ID_NINO
	  AND TSG_ID_GRUPO = OLD.PG_ID_GRUPO;

	IF(p_existe > 0) THEN
		UPDATE TS_GRUPO 
		SET TSG_ACCION = 'M',
			TSG_FECMOD = SYSDATE()
		WHERE TSG_ID_NINO = OLD.PG_ID_NINO
	  	  AND TSG_ID_GRUPO = OLD.PG_ID_GRUPO;	
	ELSE
		INSERT TS_GRUPO
		(
			TSG_ID_NINO, TSG_ID_GRUPO, TSG_CONTENIDO_SOLUCION, TSG_CONTENIDO_OPCION, TSG_ACCION, TSG_FECMOD
		)
		(
			SELECT NEW.PG_ID_NINO, NEW.PG_ID_GRUPO, G_CONTENIDO_SOLUCION, G_CONTENIDO_OPCION, 'A', SYSDATE()
			FROM GRUPO
			WHERE G_ID_GRUPO = NEW.PG_ID_GRUPO
		);			
	END IF;
END $$

CREATE TRIGGER T_PERMISOS_GRUPOS_B
BEFORE DELETE ON PERMISOS_GRUPOS
FOR EACH ROW
BEGIN
	UPDATE TS_GRUPO 
	SET TSG_ACCION = 'B',
		TSG_FECMOD = SYSDATE()
	WHERE TSG_ID_NINO = OLD.PG_ID_NINO
  	  AND TSG_ID_GRUPO = OLD.PG_ID_GRUPO;
END $$

CREATE TRIGGER T_GRUPO_A
AFTER INSERT ON GRUPO
FOR EACH ROW
BEGIN
	DECLARE p_existe INT DEFAULT 0;
	SELECT COUNT(1)
		INTO p_existe
	FROM TS_GRUPO
	WHERE TSG_ID_GRUPO = NEW.G_ID_GRUPO
		AND TSG_CONTENIDO_SOLUCION = NEW.G_CONTENIDO_SOLUCION
		AND TSG_CONTENIDO_OPCION = NEW.G_CONTENIDO_OPCION;
	IF(p_existe = 0) THEN
		INSERT TS_GRUPO
		(
			TSG_ID_NINO, TSG_ID_GRUPO, TSG_CONTENIDO_SOLUCION, TSG_CONTENIDO_OPCION, TSG_ACCION, TSG_FECMOD
		)
		(
			SELECT DISTINCT(TSG_ID_NINO), NEW.G_ID_GRUPO, NEW.G_CONTENIDO_SOLUCION, NEW.G_CONTENIDO_OPCION, 'A', SYSDATE()
			FROM TS_GRUPO
			WHERE TSG_ID_GRUPO = NEW.G_ID_GRUPO
		);	
	ELSE
		UPDATE TS_GRUPO
		SET TSG_ACCION = 'A',
			TSG_FECMOD = SYSDATE()
		WHERE TSG_ID_GRUPO = NEW.G_ID_GRUPO
		  AND TSG_CONTENIDO_SOLUCION = NEW.G_CONTENIDO_SOLUCION
		  AND TSG_CONTENIDO_OPCION = NEW.G_CONTENIDO_OPCION;
	END IF;		
END $$

CREATE TRIGGER T_GRUPO_M
BEFORE UPDATE ON GRUPO
FOR EACH ROW
BEGIN
	UPDATE TS_GRUPO 
	SET TSG_ACCION = 'M',
		TSG_FECMOD = SYSDATE()
	WHERE TSG_ID_GRUPO = OLD.G_ID_GRUPO
	  AND TSG_CONTENIDO_SOLUCION = OLD.G_CONTENIDO_SOLUCION
	  AND TSG_CONTENIDO_OPCION = OLD.G_CONTENIDO_OPCION;		
END $$


CREATE TRIGGER T_GRUPO_B
BEFORE DELETE ON GRUPO
FOR EACH ROW
BEGIN
	DECLARE p_existe INT DEFAULT 0;
	UPDATE TS_GRUPO 
	SET TSG_ACCION = 'B',
		TSG_FECMOD = SYSDATE()
	WHERE TSG_ID_GRUPO = OLD.G_ID_GRUPO
	  AND TSG_CONTENIDO_SOLUCION = OLD.G_CONTENIDO_SOLUCION
	  AND TSG_CONTENIDO_OPCION = OLD.G_CONTENIDO_OPCION;
	SELECT COUNT(G_ID_GRUPO)
		INTO p_existe
	FROM GRUPO
	WHERE G_ID_GRUPO = OLD.G_ID_GRUPO;
	IF(p_existe = 1) THEN
		DELETE FROM PERMISOS_GRUPOS
		WHERE PG_ID_GRUPO = OLD.G_ID_GRUPO;
		DELETE FROM GRUPO_MINIJUEGOS
		WHERE GM_ID_GRUPO = OLD.G_ID_GRUPO;
	END IF;
END $$

----------------------------------------------------GRUPO_MINIJUEGO-------------------------------------
CREATE TRIGGER T_GRUPO_MINIJUEGOS_A
AFTER INSERT ON GRUPO_MINIJUEGOS
FOR EACH ROW
BEGIN
	DECLARE p_existe INT DEFAULT 0;
	SELECT COUNT(1)
		INTO p_existe
	FROM TS_GRUPO_MINIJUEGOS 
	WHERE TSGM_ID_MINIJUEGO = NEW.GM_ID_MINIJUEGO
	  AND TSGM_ID_GRUPO = NEW.GM_ID_GRUPO;
	IF(p_existe > 0) THEN
		UPDATE TS_GRUPO_MINIJUEGOS 
		SET TSGM_ACCION = 'A',
			TSGM_FECMOD = SYSDATE()
		WHERE TSGM_ID_MINIJUEGO = NEW.GM_ID_MINIJUEGO
	      AND TSGM_ID_GRUPO = NEW.GM_ID_GRUPO;	
	ELSE
		INSERT TS_GRUPO_MINIJUEGOS
		(
			TSGM_ID_MINIJUEGO, TSGM_ID_GRUPO, TSGM_ACCION, TSGM_FECMOD
		)
		VALUES
		(
			NEW.GM_ID_MINIJUEGO, NEW.GM_ID_GRUPO, 'A', SYSDATE()
		);	
	END IF;
END $$

CREATE TRIGGER T_GRUPO_MINIJUEGOS_M
BEFORE UPDATE ON GRUPO_MINIJUEGOS
FOR EACH ROW
BEGIN
	DECLARE p_existe INT DEFAULT 0;
	SELECT COUNT(1)
		INTO p_existe
	FROM TS_MINIJUEGO 
	WHERE TSGM_ID_GRUPO = OLD.GM_ID_GRUPO
	  AND TSGM_ID_MINIJUEGO = OLD.GM_ID_MINIJUEGO;

	IF(p_existe > 0) THEN
		UPDATE TS_MINIJUEGO 
		SET TSGM_ACCION = 'M',
			TSGM_FECMOD = SYSDATE()
		WHERE TSGM_ID_MINIJUEGO = OLD.GM_ID_MINIJUEGO
		  AND TSGM_ID_GRUPO = OLD.GM_ID_GRUPO;	
	ELSE
		INSERT TS_GRUPO_MINIJUEGOS
		(
			TSGM_ID_MINIJUEGO, TSGM_ID_GRUPO, TSGM_ACCION, TSGM_FECMOD
		)
		VALUES
		(
			OLD.GM_ID_MINIJUEGO, OLD.GM_ID_GRUPO, 'M', SYSDATE()
		);	
	END IF;
END $$

CREATE TRIGGER T_GRUPO_MINIJUEGOS_B
BEFORE DELETE ON GRUPO_MINIJUEGOS
FOR EACH ROW
BEGIN
	UPDATE TS_GRUPO_MINIJUEGOS
	SET TSGM_ACCION = 'B',
		TSGM_FECMOD = SYSDATE()
	WHERE TSGM_ID_MINIJUEGO = OLD.GM_ID_MINIJUEGO
	  AND TSGM_ID_GRUPO = OLD.GM_ID_GRUPO;
END $$

----------------------------------------------------MAPA-------------------------------------

CREATE TRIGGER T_BOTONES_MAPA_A
AFTER INSERT ON BOTONES_MAPA
FOR EACH ROW
BEGIN
	DECLARE p_existe INT DEFAULT 0;
	SELECT COUNT(1)
		INTO p_existe
	FROM TS_BOTONES_MAPA 
	WHERE TSBM_ID_MAPA = NEW.BM_ID_MAPA
	  AND TSBM_ID_BOTON = NEW.BM_ID_BOTON;
	IF(p_existe > 0) THEN
		UPDATE TS_BOTONES_MAPA 
		SET TSBM_ACCION = 'A',
			TSBM_FECMOD = SYSDATE()
		WHERE TSBM_ID_MAPA = NEW.BM_ID_MAPA
	      AND TSBM_ID_BOTON = NEW.BM_ID_BOTON;
	ELSE
		INSERT TS_BOTONES_MAPA
		(
			TSBM_ID_MAPA, TSBM_ID_BOTON, TSBM_ACCION, TSBM_FECMOD
		)
		VALUES
		(
			NEW.BM_ID_MAPA, NEW.BM_ID_BOTON, 'A', SYSDATE()
		);	
	END IF;
END $$

CREATE TRIGGER T_BOTONES_MAPA_M
BEFORE UPDATE ON BOTONES_MAPA
FOR EACH ROW
BEGIN
	DECLARE p_existe INT DEFAULT 0;
	SELECT COUNT(1)
		INTO p_existe
	FROM TS_BOTONES_MAPA 
	WHERE TSBM_ID_MAPA = OLD.BM_ID_MAPA
	  AND TSBM_ID_BOTON = OLD.BM_ID_BOTON;
	IF(p_existe > 0) THEN
		UPDATE TS_BOTONES_MAPA 
		SET TSBM_ACCION = 'M',
			TSBM_FECMOD = SYSDATE()
		WHERE TSBM_ID_MAPA = OLD.BM_ID_MAPA
	      AND TSBM_ID_BOTON = OLD.BM_ID_BOTON;
	ELSE
		INSERT TS_BOTONES_MAPA
		(
			TSBM_ID_MAPA, TSBM_ID_BOTON, TSBM_ACCION, TSBM_FECMOD
		)
		VALUES
		(
			OLD.BM_ID_MAPA, OLD.BM_ID_BOTON, 'M', SYSDATE()
		);	
	END IF;
END $$

CREATE TRIGGER T_BOTONES_MAPA_B
BEFORE DELETE ON BOTONES_MAPA
FOR EACH ROW
BEGIN
	UPDATE TS_BOTONES_MAPA 
		SET TSBM_ACCION = 'B',
			TSBM_FECMOD = SYSDATE()
		WHERE TSBM_ID_MAPA = OLD.BM_ID_MAPA
	      AND TSBM_ID_BOTON = OLD.BM_ID_BOTON;
END $$

----------------------------------------------------PREMIOS-------------------------------------

CREATE TRIGGER T_PREMIO_A
AFTER INSERT ON PREMIO
FOR EACH ROW
BEGIN
	REPLACE PREMIOS_USUARIOS
	(
		PU_ID_PREMIO, PU_ID_NINO, PU_CONSEGUIDO, PU_FECMOD
	)
	(SELECT NEW.PR_ID_PREMIO, N_ID_NINO, 'No', SYSDATE() FROM NINO);
END $$

CREATE TRIGGER T_NINO_A
AFTER INSERT ON NINO
FOR EACH ROW
BEGIN
	REPLACE PREMIOS_USUARIOS
	(
		PU_ID_PREMIO, PU_ID_NINO, PU_CONSEGUIDO, PU_FECMOD
	)
	(SELECT PR_ID_PREMIO, NEW.N_ID_NINO, 'No', SYSDATE() FROM PREMIO);
END $$

DELIMITER ;

