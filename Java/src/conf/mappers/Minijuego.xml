<?xml version='1.0' encoding='UTF-8' ?>
	<!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN'
	  'http://mybatis.org/dtd/mybatis-3-mapper.dtd'>

<mapper namespace='bd.ibatis.mappers.MinijuegoMapper'>

	<resultMap type='Minijuego' id='MinijuegosResultset' autoMapping="true">
		<constructor>
			<idArg column="M_ID_MINIJUEGO" javaType="java.lang.Integer"/>
			<idArg column="M_NOMBRE" javaType="java.lang.String"/>	
			<idArg column="M_DESCRIPCION" javaType="java.lang.String"/>	
			<idArg column="M_TAMANO" javaType="java.lang.Integer"/>	
			<idArg column="M_MAXIMO" javaType="java.lang.Integer"/>	
			<idArg column="M_MINIMO" javaType="java.lang.Integer"/>	
		</constructor>		
		<collection property="grupos" javaType="ArrayList" ofType="Grupo" column="M_ID_MINIJUEGO" >	
			<constructor>
				<idArg column="G_ID_GRUPO" javaType="java.lang.Integer"/>	
				<idArg column="G_NOMBRE" javaType="java.lang.String"/>
			</constructor>		
		</collection>	
	</resultMap>	
	
	<resultMap type='NinoPermisos' id='PermisosMinijuegoResultset' autoMapping="true">
		<constructor>
			<idArg column="N_ID_NINO" javaType="java.lang.Integer"/>
			<idArg column="N_NOMBRE" javaType="java.lang.String"/>	
			<idArg column="N_APELLIDOS" javaType="java.lang.String"/>	
			<idArg column="PM_MAXIMO" javaType="java.lang.Integer"/>	
			<idArg column="PM_MINIMO" javaType="java.lang.Integer"/>	
			<idArg column="PM_PUNTUACION_MAXIMA" javaType="java.lang.Integer"/>
		</constructor>
	</resultMap>

	<select id='getMinijuegos' resultMap='MinijuegosResultset'>
		SELECT M_ID_MINIJUEGO, M_NOMBRE, M_DESCRIPCION, M_TAMANO, M_MAXIMO, M_MINIMO, G_ID_GRUPO, G_NOMBRE				
		FROM MINIJUEGO
		LEFT JOIN (SELECT G_ID_GRUPO, G_NOMBRE, GM_ID_MINIJUEGO 
					FROM GRUPO, GRUPO_MINIJUEGOS 
					WHERE GM_ID_GRUPO = G_ID_GRUPO) as G ON GM_ID_MINIJUEGO = M_ID_MINIJUEGO
    </select>
    
    <insert id="insercionInical">
    	INSERT INTO MINIJUEGO
			(M_ID_MINIJUEGO, M_NOMBRE, M_DESCRIPCION, M_TAMANO, M_MINIMO, M_MAXIMO )
		VALUES
			( 1, "BUSCA", "Marca todos los textos que coinciden que el del título.", 1, 4, 15),
			( 2, "FRASE CORRECTA", "Escoge la frase que mejor encage con la imagen.",4, 4, 12),
			( 3, "LABERTINTO ERRÓNEO", "Busca el camino hasta la llave eligiendo únicamente las casillas en las que la flecha va en la dirección del texto.",0, 4,10),
			( 4, "PALABRAS INCOMPLETAS", "Completa las palabras con las letras que faltan.",1, 4, 8),
			( 5, "PAREJAS", "Deberá seleccionar en parejas las imagenes o textos que coincidan o las imagenes con el texto que correspondan.",1, 3, 10),
			( 6, "SELECCIONA", "Escoge la imagen que mejor encage con el texto.",4, 4, 12),
			( 7, "SOPA DE LETRAS", "Busca las palabras o el nombre de las imágenes.", 1, 4, 10)
    </insert>
         
    <select id='existeNombre' resultType='int' parameterType='Map'>
		SELECT COUNT(1)
		FROM MINIJUEGO
		<where>
			RTRIM(M_NOMBRE) = RTRIM(#{nombre})
			AND M_ID_MINIJUEGO NOT IN (#{idMinijuego})
		</where>
    </select>
    
	<update id="updateMinijuego" parameterType='Minijuego'>
		UPDATE MINIJUEGO
		<set>
			M_NOMBRE = #{nombre},
			M_DESCRIPCION = #{descripcion}
		</set>
		<where>
			M_ID_MINIJUEGO = #{idMinijuego}
		</where>
	</update>	
	
	
	<delete id='insertGrupoMinijuego' parameterType='Map'>
	    INSERT INTO GRUPO_MINIJUEGOS 
	    (GM_ID_GRUPO, GM_ID_MINIJUEGO)
	    VALUES
	    (#{idGrupo}, #{idMinijuego})
	</delete> 
	
	<delete id='deleteGrupoMinijuego' parameterType='Map'>
	    DELETE FROM GRUPO_MINIJUEGOS WHERE GM_ID_GRUPO = #{idGrupo} AND GM_ID_MINIJUEGO= #{idMinijuego}
	</delete> 
	
	<select id="getPermisos" resultMap='PermisosMinijuegoResultset' parameterType="Minijuego">
		SELECT N_ID_NINO, N_NOMBRE, N_APELLIDOS, PM_MAXIMO, PM_MINIMO, PM_PUNTUACION_MAXIMA
		FROM NINO, PERMISOS_MINIJUEGOS
		<where>
			N_ID_NINO = PM_ID_NINO
			AND PM_ID_MINIJUEGO = #{idMinijuego}
		</where>
	</select>
	
	<insert id="insertPermisos" parameterType='Minijuego'>
		INSERT IGNORE INTO PERMISOS_MINIJUEGOS
		(PM_ID_MINIJUEGO, PM_ID_NINO, PM_MAXIMO, PM_MINIMO, PM_PUNTUACION_MAXIMA)
		VALUES		
	   	<foreach collection="ninos" item="nino" index="index" open="(" separator="),(" close=")">   		
			#{idMinijuego}, #{nino.idUsuario}, #{nino.maximo}, #{nino.minimo}, #{nino.puntuacionMaxima}
		</foreach>	
	</insert>	
	
	<delete id="deletePermisos" parameterType='Map'>
		DELETE FROM PERMISOS_MINIJUEGOS
		<where>
			PM_ID_MINIJUEGO = #{idMinijuego}
			AND PM_ID_NINO= #{idNino}
		</where> 	
	</delete>
	
</mapper>